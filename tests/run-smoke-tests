#!/usr/bin/env bash
# shellcheck disable=SC2155
set -euo pipefail
trap "exit 0" INT

# Runs smoke tests - basic use-case checks with default data
# https://en.wikipedia.org/wiki/Smoke_testing_(software)
#
# Dependencies:
#   sudo apt-get install -y bash curl parallel
#   mkdir -p "${HOME}/bin"
#   export PATH="${HOME}/bin:${PATH}"
#   curl -fsSL "https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64" -o ${HOME}/bin/jq && chmod +x ${HOME}/bin/jq

export NEXTCLADE_BIN="${1:? "Usage: ${0} path_to_nextclade"}"
export NEXTCLADE_BIN

THIS_DIR=$(
  cd "$(dirname "${BASH_SOURCE[0]}")"
  pwd
)
export THIS_DIR

export DATASET_DIR="$THIS_DIR/../tmp/smoke-tests/dataset"
export OUT_DIR="$THIS_DIR/../tmp/smoke-tests/result"

export dataset_names_and_refs=$(${NEXTCLADE_BIN} dataset list --json | jq -r '.[] | select(.attributes.tag.isDefault==true) |  .attributes.name.value + ";" + .attributes.reference.value' | sort | uniq)
export dataset_names_without_refs=$(${NEXTCLADE_BIN} dataset list --json | jq -r '.[] | select(.attributes.tag.isDefault==true) |  .attributes.name.value + ";"' | sort | uniq)
export all_datasets="${dataset_names_and_refs} ${dataset_names_without_refs}"
export num_datasets=$(echo "${all_datasets}" | wc -l)
export JOBS="${JOBS:=${num_datasets}}"

function run_one_test() {
  name_and_ref=$1

  # shellcheck disable=SC2206
  arr=(${name_and_ref//;/ })
  name="${arr[0]}"
  reference="${arr[1]}"

  echo "Running '${NEXTCLADE_BIN}' for '${name}' with reference '${reference:-default}'"

  ${NEXTCLADE_BIN} dataset get --name="${name}" ${reference:+--reference "${reference}"} --output-dir="$DATASET_DIR/${name}/${reference:-default}"

  ${NEXTCLADE_BIN} run --in-order --include-reference \
    --input-dataset="$DATASET_DIR/${name}/${reference:-default}" \
    --output-translations="$OUT_DIR/${name}/${reference:-default}/translations/gene_{gene}.translation.fasta" \
    --output-fasta="$OUT_DIR/${name}/${reference:-default}/aligned.fasta" \
    --output-tsv="$OUT_DIR/${name}/${reference:-default}/nextclade.tsv" \
    --output-json="$OUT_DIR/${name}/${reference:-default}/nextclade.json" \
    --output-tree="$OUT_DIR/${name}/${reference:-default}/tree.auspice.json" \
    "$DATASET_DIR/${name}/${reference:-default}/sequences.fasta"
}
export -f run_one_test

function run_many_tests() {
  parallel --jobs=+0 run_one_test ::: "${all_datasets}"
}
export -f run_many_tests




# Additional experimental datasets. This should probably be removed after release of this branch.
export DATASET_DIR_EXPERIMENTAL="$THIS_DIR/../test_datasets"
export all_experimental_datasets="$(ls "${DATASET_DIR_EXPERIMENTAL}")"

function run_one_experimental_test() {
  name=$1
  reference="default"

  # This dataset is crashing, probably due to defective or unsupported features
  if [ "$name" == "vic_na" ]; then
    return
  fi

  sequences="${DATASET_DIR_EXPERIMENTAL}/${name}/files/sequences.fasta"
  msg_no_sequences=""
  if [ ! -f "${sequences}" ]; then
    sequences="${DATASET_DIR_EXPERIMENTAL}/${name}/files/reference.fasta"
    msg_no_sequences=" (Note: this dataset contains no example sequences. Using reference sequence as query.)"
  fi

  echo "Running '${NEXTCLADE_BIN}' for '${name}' with reference '${reference:-default}'${msg_no_sequences}"

  ${NEXTCLADE_BIN} run --quiet --in-order --include-reference \
    --input-dataset="${DATASET_DIR_EXPERIMENTAL}/${name}/files" \
    --output-translations="$OUT_DIR/${name}/${reference:-default}/translations/gene_{gene}.translation.fasta" \
    --output-fasta="$OUT_DIR/${name}/${reference:-default}/aligned.fasta" \
    --output-tsv="$OUT_DIR/${name}/${reference:-default}/nextclade.tsv" \
    --output-json="$OUT_DIR/${name}/${reference:-default}/nextclade.json" \
    --output-tree="$OUT_DIR/${name}/${reference:-default}/tree.auspice.json" \
    "${sequences}"
}
export -f run_one_experimental_test

function run_many_experimental_tests() {
  parallel --jobs=+0 run_one_experimental_test ::: "${all_experimental_datasets}"
}
export -f run_many_experimental_tests



parallel --jobs=2 ::: run_many_tests run_many_experimental_tests

