version: 2.1


# Reference. Allows to restrict a job to release branch
release_only: &release_only
  filters:
    branches:
      only: nextalign-release


jobs:
  Build-Linux-x86_64:
    resource_class: medium

    machine:
      image: ubuntu-2004:202010-01

    steps:
      - checkout

      - run:
          name: 'Pull "Builder" container image'
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            ./scripts/docker_builder_image_pull.sh || true

      - run:
          name: 'Build "Builder" container image'
          command: |
            make docker-builder

      - run:
          name: 'Push "Builder" container image'
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            ./scripts/docker_builder_image_push.sh

      - restore_cache:
          name: 'Restore build cache'
          keys:
            - cache-nextalign-v2-cache-{{ arch }}-{{ checksum "conanfile.txt" }}

      - run:
          name: 'Run "Builder" container'
          command: |
            make docker-builder-run

      - save_cache:
          name: 'Save build cache'
          key: cache-nextalign-v2-cache-{{ arch }}-{{ checksum "conanfile.txt" }}
          paths:
            - .cache

      - store_artifacts:
          name: 'Store Linux x86_64 binary'
          path: .out/bin/nextalign-Linux-x86_64
          destination: nextalign-Linux-x86_64

      - run:
          name: "Publish Release on GitHub"
          command: |
            ./scripts/publish_github_release_linux.sh

      - run:
          name: "Publish Docker Image to Docker Hub"
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            ./scripts/publish_docker_images.sh

  Build-MacOS:
    parameters:
      macos_arch:
        type: string

    macos:
      xcode: "12.4.0"

    environment:
      CLICOLOR: 1
      TERM: xterm-256color

    steps:
      - checkout

      - restore_cache:
          name: 'Restore homebrew cache'
          keys:
            - cache-nextalign-v2-homebrew-{{ arch }}

      - run:
          name: 'Install build tools'
          command: |
            set -x
            brew install -q ccache cmake conan coreutils cppcheck ghr
            conan profile new default --detect
            conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
          environment:
            HOMEBREW_NO_AUTO_UPDATE: 1
            CONAN_USER_HOME: '/Users/distiller/project/.cache/conan'

      - save_cache:
          name: 'Save homebrew cache'
          key: cache-nextalign-v2-homebrew-{{ arch }}
          paths:
            - '~/Library/Caches/Homebrew'
            - '/usr/local/Homebrew'

      - restore_cache:
          name: 'Restore build cache'
          keys:
            - cache-nextalign-v4-cache-{{ arch }}-{{ checksum "conanfile.txt" }}-<< parameters.macos_arch >>

      - run:
          name: Run macOS << parameters.macos_arch >> build
          command: |
            make prod
          environment:
            CONAN_USER_HOME: '/Users/distiller/project/.cache/conan'
            HOST_ARCH: << parameters.macos_arch >>

      - save_cache:
          name: 'Save build cache'
          key: cache-nextalign-v4-cache-{{ arch }}-{{ checksum "conanfile.txt" }}-<< parameters.macos_arch >>
          paths:
            - .cache

      - store_artifacts:
          name: Persist artifacts in CircleCI Artifacts (macOS << parameters.macos_arch >>)
          path: .out/bin/nextalign-MacOS-<< parameters.macos_arch >>
          destination: nextalign-MacOS-<< parameters.macos_arch >>

      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(cat packages/nextalign_cli/VERSION)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -replace nextalign-${VERSION} .out/bin

workflows:
  version: 2
  build:
    jobs:
      - Build-Linux-x86_64:
         <<: *release_only

      - Build-MacOS:
          matrix:
            parameters:
              macos_arch:
                - x86_64
                - arm64
          <<: *release_only
