version: 2.1


jobs:
  Update-Builder-Container:

    shell: '/bin/bash -euxo pipefail'

    machine:
      image: ubuntu-2004:202201-02
      docker_layer_caching: true

    resource_class: large

    steps:
      - checkout

      - run:
          name: 'Calculate current docker build checksum'
          command: |
            ./scripts/docker_build_checksum.sh > "checksum.current.txt"

      - restore_cache:
          name: 'Restore previous docker build checksum from cache'
          keys:
            - cache-v2-nextclade-docker-{{ checksum "checksum.current.txt" }}

      - run:
          name: 'Compare current and previous checksum, halt if no changes'
          command: |
            touch checksum.previous.txt
            CHECKSUM_OLD="$(cat checksum.previous.txt)"
            CHECKSUM_NEW="$(cat checksum.current.txt)"

            echo CHECKSUM_OLD=${CHECKSUM_OLD}
            echo CHECKSUM_NEW=${CHECKSUM_NEW}

            if [ "${CHECKSUM_OLD}" == "${CHECKSUM_NEW}" ]; then
              echo "Checksum did not change. Halting the job."
              circleci-agent step halt
            fi

            mv checksum.current.txt checksum.previous.txt
            echo "Checksum changed. Continuing the job."

      - run:
          name: 'Build "Builder" container image'
          command: |
            DOCKER_REPO="nextstrain/nextclade_builder"
            DOCKER_TARGET="dev"
            DOCKER_IMAGE_VERSION="$(cat checksum.previous.txt)"
            DOCKER_TAG=${DOCKER_REPO}:${DOCKER_TARGET}-${DOCKER_IMAGE_VERSION}

            docker build \
              --file="docker-dev.dockerfile" \
              --target="dev" \
              --tag="${DOCKER_TAG}" \
              --build-arg="UID=$(id -u)" \
              --build-arg="GID=$(id -g)" \
              --build-arg="USER=user" \
              --build-arg="GROUP=user" \
              .

      - run:
          name: 'Push container images'
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push "nextstrain/nextclade_builder:dev-$(cat checksum.previous.txt)"

      - save_cache:
          name: 'Save new checksum.txt to cache'
          key: cache-v2-nextclade-docker-{{ checksum "checksum.previous.txt" }}
          paths:
            - checksum.previous.txt


  Build-Cli:
    parameters:
      target_arch:
        type: string

    shell: '/bin/bash -euxo pipefail'

    machine:
      image: ubuntu-2004:202201-02
      docker_layer_caching: true

    resource_class: large

    steps:
      - checkout

      - run:
          name: ' [ << parameters.target_arch >> ] | Calculate current docker build checksum'
          command: |
            ./scripts/docker_build_checksum.sh > "checksum.current.txt"

      - run:
          name: ' [ << parameters.target_arch >> ] | Pull builder image'
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker pull "nextstrain/nextclade_builder:dev-$(cat checksum.current.txt)"

      - restore_cache:
          name: ' [ << parameters.target_arch >> ] | Restore build cache'
          keys:
            - cache-v1-nextclade-cli-<< parameters.target_arch >>-{{ checksum "Cargo.toml" }}-{{ checksum "packages_rs/nextclade/Cargo.toml" }}

      - run:
          name: ' [ << parameters.target_arch >> ] | Build CLI'
          command: |
            export CROSS="<< parameters.target_arch >>"

            CROSS=${CROSS} ./docker-dev br

            mkdir -p .out/

            if [[ "${CROSS}" == *windows* ]]; then
              cp ".build/docker/${CROSS}/release/nextalign.exe" ".out/nextalign-${CROSS}.exe"
              cp ".build/docker/${CROSS}/release/nextclade.exe" ".out/nextclade-${CROSS}.exe"
            else
              cp ".build/docker/${CROSS}/release/nextalign" ".out/nextalign-${CROSS}"
              cp ".build/docker/${CROSS}/release/nextclade" ".out/nextclade-${CROSS}"
            fi

      - save_cache:
          name: ' [ << parameters.target_arch >> ] | Save build cache'
          key: cache-v1-nextclade-cli-<< parameters.target_arch >>-{{ checksum "Cargo.toml" }}-{{ checksum "packages_rs/nextclade/Cargo.toml" }}
          paths:
            - .build
            - .cache

      - store_artifacts:
          name: ' [ << parameters.target_arch >> ] | Store build artifacts'
          path: .out

      - persist_to_workspace:
          name: ' [ << parameters.target_arch >> ] | Persist build artifacts to workspace'
          root: .
          paths:
            - .out/*

      - run:
          name: ' [ << parameters.target_arch >> ] | Halt if not on release-cli branch'
          command: |
            if [ "$CIRCLE_BRANCH" != "release-cli" ]; then
                circleci-agent step halt
            fi


  Test-Cli:
    parameters:
      target_arch:
        type: string

    shell: '/bin/bash -euxo pipefail'

    machine:
      image: ubuntu-2004:202201-02
      docker_layer_caching: true

    resource_class: large

    steps:
      - run:
          name: ' [ << parameters.target_arch >> ] | Test CLI'
          command: |
            mkdir -p /tmp/workspace

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: ' [ << parameters.target_arch >> ] | Test CLI'
          command: |
            /tmp/workspace/nextclade-<< parameters.target_arch >> --version || true
            /tmp/workspace/.out/nextclade-<< parameters.target_arch >> --version || true
            /tmp/workspace/nextalign-<< parameters.target_arch >> --version || true
            /tmp/workspace/.out/nextalign-<< parameters.target_arch >> --version || true


  Build-Web:

    shell: '/bin/bash -euxo pipefail'

    machine:
      image: ubuntu-2004:202201-02
      docker_layer_caching: true

    resource_class: large

    steps:
      - checkout

      - run:
          name: ' [ web ] | Calculate current docker build checksum'
          command: |
            ./scripts/docker_build_checksum.sh > "checksum.current.txt"

      - run:
          name: ' [ web ] | Pull builder image'
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker pull "nextstrain/nextclade_builder:dev-$(cat checksum.current.txt)"

      - restore_cache:
          name: ' [ web ] | Restore build cache'
          keys:
            - cache-v1-nextclade-wasm-{{ checksum "Cargo.toml" }}-{{ checksum "packages_rs/nextclade/Cargo.toml" }}-{{ checksum "packages_rs/nextclade-web/Cargo.toml" }}

      - run:
          name: ' [ web ] | Build WebAssembly module'
          command: |
            ./docker-dev Wr

      - save_cache:
          name: ' [ web ] | Save build cache'
          key: cache-v1-nextclade-wasm-{{ checksum "Cargo.toml" }}-{{ checksum "packages_rs/nextclade/Cargo.toml" }}-{{ checksum "packages_rs/nextclade-web/Cargo.toml" }}
          paths:
            - .build
            - .cache
            - packages_rs/nextclade-web/.build
            - packages_rs/nextclade-web/.cache

      - restore_cache:
          name: ' [ web ] | Restore build cache'
          keys:
            - cache-v1-nextclade-web-{{ checksum "packages_rs/nextclade-web/yarn.lock" }}

      - run:
          name: ' [ web ] | Build web application'
          command: |

            export FULL_DOMAIN="https://example.com"
            export DATA_FULL_DOMAIN="https://data.example.com"

            echo "FULL_DOMAIN=${FULL_DOMAIN}" >> .env
            echo "DATA_FULL_DOMAIN=${DATA_FULL_DOMAIN}" >> .env
            echo "ANALYZE=0" >> .env
            echo "PROFILE=0" >> .env
            echo "WATCH_POLL=0" >> .env
            echo "PROD_ENABLE_SOURCE_MAPS=0" >> .env
            echo "PROD_ENABLE_TYPE_CHECKS=0" >> .env
            echo "PROD_ENABLE_ESLINT=0" >> .env
            echo "PROD_ENABLE_STYLELINT=0" >> .env
            echo "PROD_ENABLE_REDUX_DEV_TOOLS=0" >> .env
            echo "PROD_ENABLE_REDUX_IMMUTABLE_STATE_INVARIANT=0" >> .env
            echo "PROD_ENABLE_REDUX_LOGGER=0" >> .env

            ./docker-dev ar

      - save_cache:
          name: ' [ web ] | Save build cache'
          key: cache-v1-nextclade-web-{{ checksum "packages_rs/nextclade-web/yarn.lock" }}
          paths:
            - packages_rs/nextclade-web/.build
            - packages_rs/nextclade-web/.cache

      - run:
          name: ' [ web ] | Halt if not on release-cli branch'
          command: |
            if [ "$CIRCLE_BRANCH" != "release-cli" ]; then
                circleci-agent step halt
            fi


#  Build-Web:
#    resource_class: medium
#
#    docker:
#      - image: nextstrain/nextclade_builder:web
#        auth:
#          username: $DOCKERHUB_USERNAME
#          password: $DOCKERHUB_PASS
#    environment:
#      AWS_PAGER: ''
#
#    steps:
#      - checkout
#
#      - restore_cache:
#          name: 'Restore WebAssembly module build cache'
#          keys:
#            - cache-nextclade-v8-web-wasm-{{ arch }}-{{ checksum "conanfile.wasm.txt" }}
#
#      - run:
#          name: 'Build WebAssembly module'
#          command: |
#            echo "FULL_DOMAIN=${FULL_DOMAIN}" >> .env
#            echo "DATA_FULL_DOMAIN=${DATA_FULL_DOMAIN}" >> .env
#            echo "PROD_ENABLE_SOURCE_MAPS=0" >> .env
#            echo "PROD_ENABLE_TYPE_CHECKS=0" >> .env
#            echo "PROD_ENABLE_ESLINT=0" >> .env
#            echo "PROD_ENABLE_STYLELINT=0" >> .env
#            echo "PROD_ENABLE_REDUX_DEV_TOOLS=0" >> .env
#            echo "PROD_ENABLE_REDUX_IMMUTABLE_STATE_INVARIANT=0" >> .env
#            echo "PROD_ENABLE_REDUX_LOGGER=0" >> .env
#            make prod-wasm-nowatch
#
#      - save_cache:
#          name: 'Save WebAssembly module build cache'
#          key: cache-nextclade-v8-web-wasm-{{ arch }}-{{ checksum "conanfile.wasm.txt" }}
#          paths:
#            - .cache
#
#      - restore_cache:
#          name: 'Restore web application build cache'
#          keys:
#            - cache-nextclade-v8-web-js-{{ arch }}-{{ checksum "packages/web/yarn.lock" }}
#
#      - run:
#          name: 'Build web application'
#          command: |
#            make lint-web
#            make prod-web-nowatch
#
#      - save_cache:
#          name: 'Save web application build cache'
#          key: cache-nextclade-v8-web-js-{{ arch }}-{{ checksum "packages/web/yarn.lock" }}
#          paths:
#            - packages/web/.cache
#            - packages/web/.build/production/tmp/cache
#
#      - run:
#          name: 'Clear AWS S3 bucket (branch << pipeline.git.branch >>)'
#          command: |
#            aws s3 rm s3://${AWS_S3_BUCKET} --recursive
#
#      - run:
#          name: 'Deploy web bundle to AWS S3 (branch << pipeline.git.branch >>)'
#          command: |
#            cd packages/web/.build/production/web
#            aws s3 cp --recursive --cache-control "max-age=2592000, public" "_next/" "s3://${AWS_S3_BUCKET}/_next/"
#
#      - run:
#          name: 'Deploy web root to AWS S3 (branch << pipeline.git.branch >>)'
#          command: |
#            cd packages/web/.build/production/web
#            aws s3 cp --recursive --exclude "_next" --exclude "*.html" "./" "s3://${AWS_S3_BUCKET}/"
#
#      - run:
#          name: 'Deploy html files to AWS S3 (branch << pipeline.git.branch >>)'
#          command: |
#            cd packages/web/.build/production/web
#            find * -type f -name "*.html" -exec bash -c '\
#            aws s3 cp \
#              --content-type "text/html" \
#              --cache-control "no-cache" \
#              --metadata-directive REPLACE \
#                $1 \
#                s3://${AWS_S3_BUCKET}/${1}' \
#            - "{}" \;
#
#      - run:
#          name: 'Invalidate AWS Cloudfront cache'
#          command: |
#            aws cloudfront create-invalidation \
#              --distribution-id ${AWS_CLOUDFRONT_DISTRIBUTION_ID} \
#              --paths "/*"


#  Build-MacOS:
#    parameters:
#      macos_arch:
#        type: string
#
#    macos:
#      xcode: "12.4.0"
#
#    environment:
#      CLICOLOR: 1
#      TERM: xterm-256color
#
#    steps:
#      - checkout
#
#      - restore_cache:
#          name: 'Restore homebrew cache'
#          keys:
#            - cache-nextclade-v8-homebrew-{{ arch }}-{{ checksum "Brewfile" }}
#
#      - run:
#          name: 'Install build tools'
#          command: |
#            set -x
#            brew bundle
#
#            mkdir -p .cache
#            python3 -m venv .cache/venv
#            source .cache/venv/bin/activate
#            pip3 install --upgrade -r requirements.txt
#
#            conan profile new default --detect
#
#          environment:
#            HOMEBREW_NO_AUTO_UPDATE: 1
#            CONAN_USER_HOME: '/Users/distiller/project/.cache'
#
#      - save_cache:
#          name: 'Save homebrew cache'
#          key: cache-nextclade-v8-homebrew-{{ arch }}-{{ checksum "Brewfile" }}
#          paths:
#            - '~/Library/Caches/Homebrew'
#            - '/usr/local/Homebrew'
#
#      - restore_cache:
#          name: 'Restore build cache'
#          keys:
#            - cache-nextclade-v8-cache-{{ arch }}-{{ checksum "conanfile.txt" }}-<< parameters.macos_arch >>
#
#      - run:
#          name: Run macOS << parameters.macos_arch >> build
#          command: |
#            source .cache/venv/bin/activate
#            echo "DATA_FULL_DOMAIN=${DATA_FULL_DOMAIN}" >> .env
#            make prod
#          environment:
#            CONAN_USER_HOME: '/Users/distiller/project/.cache'
#            HOST_ARCH: << parameters.macos_arch >>
#
#      - save_cache:
#          name: 'Save build cache'
#          key: cache-nextclade-v8-cache-{{ arch }}-{{ checksum "conanfile.txt" }}-<< parameters.macos_arch >>
#          paths:
#            - .cache
#
#      - store_artifacts:
#          name: 'Store artifacts: nextalign-MacOS-<< parameters.macos_arch >>'
#          path: .out/bin/nextalign-MacOS-<< parameters.macos_arch >>
#          destination: nextalign-MacOS-<< parameters.macos_arch >>
#
#      - store_artifacts:
#          name: 'Store artifacts: nextclade-MacOS-<< parameters.macos_arch >>'
#          path: .out/bin/nextclade-MacOS-<< parameters.macos_arch >>
#          destination: nextclade-MacOS-<< parameters.macos_arch >>
#
#      - run:
#          name: Halt if not on release-cli branch
#          command: |
#            if [ "$CIRCLE_BRANCH" != "release-cli" ]; then
#                circleci-agent step halt
#            fi
#
#      - run:
#          name: 'Publish binaries to GitHub Releases: MacOS-<< parameters.macos_arch >>'
#          command: |
#            OS=darwin ./scripts/download_github_release_tool.sh
#            ./scripts/publish_github_releases.sh

cli_only: &cli_only
  filters:
    branches:
      only:
        #        - release-cli
        #        - staging-cli
        - rust


major_branches_only: &major_branches_only
  filters:
    branches:
      only:
        #        - master
        #        - staging
        #        - release
        - rust

major_branches_and_cli_release_only: &major_branches_and_cli_only
  filters:
    branches:
      only:
        #        - master
        #        - staging
        #        - release
        #        - release-cli
        #        - staging-cli
        - rust

workflows:
  version: 2
  build:
    jobs:
      - Update-Builder-Container:
          <<: *major_branches_and_cli_only

      - Build-Cli:
          <<: *major_branches_and_cli_only
          requires:
            - Update-Builder-Container
          matrix:
            parameters:
              target_arch:
                - x86_64-unknown-linux-gnu
                - x86_64-pc-windows-gnu
                # - aarch64-apple-darwin
                # - aarch64-unknown-linux-gnu
                # - x86_64-apple-darwin
                # - x86_64-unknown-linux-musl

      - Test-Cli:
          <<: *major_branches_and_cli_only

          requires:
            - Build-Cli-x86_64-unknown-linux-gnu

          matrix:
            parameters:
              target_arch:
                - x86_64-unknown-linux-gnu

      - Build-Web:
#          context: nextclade_web_<< pipeline.git.branch >>
          <<: *major_branches_only
          requires:
            - Update-Builder-Container
#
#      - Build-Linux-x86_64:
#          context: nextclade_cli_<< pipeline.git.branch >>
#          <<: *cli_only
#          requires:
#            - Update-Builder-Container
#
#      - Build-MacOS:
#          context: nextclade_cli_<< pipeline.git.branch >>
#          matrix:
#            parameters:
#              macos_arch:
#                - x86_64
#                - arm64
#          <<: *cli_only
