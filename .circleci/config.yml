version: 2.1


release_only: &release_only
  filters:
    branches:
      only: cli-release

major_branches_only: &major_branches_only
  filters:
    branches:
      only: /(ci_wasm)/


jobs:
  Update-Builder-container:
    resource_class: medium

    machine:
      image: ubuntu-2004:202010-01

    steps:
      - checkout

      - run:
          name: 'Create blank checksum.txt'
          command: |
            echo "" > checksum.txt

      - restore_cache:
          name: 'Restore previous checksum.txt from cache'
          keys:
            - cache-nextclade-builder-container-v1-cache-{{ checksum "checksum.txt" }}

      - run:
          name: 'Compare checksum.txt to cached one, halt if no changes'
          command: |
            set -x
            cat Dockerfile scripts/*.sh .nvmrc .dockerignore .gitignore Makefile .circleci/* | md5sum > checksum.new.txt
            CHECKSUM_OLD=$(cat checksum.txt)
            CHECKSUM_NEW=$(cat checksum.new.txt)
            if [ "${CHECKSUM_OLD}" == "${CHECKSUM_NEW}" ]; then
              circleci step halt
            fi
            mv checksum.new.txt checksum.txt

      - save_cache:
          name: 'Save new checksum.txt to cache'
          key: cache-nextclade-builder-container-v1-cache-{{ checksum "checksum.txt" }}
          paths:
            - checksum.txt

      - run:
          name: 'Build "Builder" container image'
          command: |
            ./scripts/docker_builder_image_build.sh "builder"

      - run:
          name: 'Build "Web" container image'
          command: |
            ./scripts/docker_builder_image_build.sh "web"

      - run:
          name: 'Push container images'
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            ./scripts/docker_builder_image_push.sh "builder"
            ./scripts/docker_builder_image_push.sh "web"

  Build-Web:
    resource_class: medium

    docker:
      - image: nextstrain/nextclade_builder:web
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASS

    steps:
      - checkout

      - restore_cache:
          name: 'Restore build cache'
          keys:
            - cache-nextclade-web-v1-cache-{{ arch }}-{{ checksum "conanfile.txt" }}-{{ checksum "packages/web/yarn.lock" }}

      - run:
          name: 'Build WebAssembly module'
          command: |
            make prod-wasm

      - run:
          name: 'Build web application'
          command: |
            make prod-web

      - save_cache:
          name: 'Save build cache'
          key: cache-nextclade-web-v1-cache-{{ arch }}-{{ checksum "conanfile.txt" }}-{{ checksum "packages/web/yarn.lock" }}
          paths:
            - .cache
            - packages/web/.cache
            - packages/web/.build/production/tmp/cache

      - run:
          name: 'Deploy web bundle to AWS S3 ("${CIRCLE_BRANCH}")'
          command: |
            cd packages/web/.build/production/web
            aws s3 cp --recursive --cache-control "max-age=2592000, public" "_next/" "s3://${AWS_S3_BUCKET}/_next/"

      - run:
          name: 'Deploy web root to AWS S3 ("${CIRCLE_BRANCH}")'
          command: |
            cd packages/web/.build/production/web
            aws s3 cp --recursive --exclude "_next" --exclude "*.html" "./" "s3://${AWS_S3_BUCKET}/"

      - run:
          name: 'Deploy html files to AWS S3, removing extension ("${CIRCLE_BRANCH}")'
          command: |
            cd packages/web/.build/production/web
            find * -type f -name "*.html" -exec bash -c '\
            aws s3 cp \
              --content-type "text/html" \
              --cache-control "no-cache" \
              --metadata-directive REPLACE \
                $1 \
                s3://${AWS_S3_BUCKET}/${1%.html}' \
            - "{}" \;

      - run:
          name: 'Invalidate Cloudfront cache'
          command: |
            aws cloudfront create-invalidation \
              --distribution-id ${AWS_CLOUDFRONT_DISTRIBUTION_ID} \
              --paths "/*"

  Build-Linux-x86_64:
    resource_class: medium

    machine:
      image: ubuntu-2004:202010-01

    steps:
      - checkout

      - run:
          name: 'Pull "Builder" container image'
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            ./scripts/docker_builder_image_pull.sh || true

      - run:
          name: 'Build "Builder" container image'
          command: |
            make docker-builder

      - run:
          name: 'Push "Builder" container image'
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            ./scripts/docker_builder_image_push.sh

      - restore_cache:
          name: 'Restore build cache'
          keys:
            - cache-nextclade-v1-cache-{{ arch }}-{{ checksum "conanfile.txt" }}

      - run:
          name: 'Run "Builder" container'
          command: |
            make docker-builder-run

      - save_cache:
          name: 'Save build cache'
          key: cache-nextclade-v1-cache-{{ arch }}-{{ checksum "conanfile.txt" }}
          paths:
            - .cache

      - store_artifacts:
          name: 'Store artifacts: nextalign-Linux-x86_64'
          path: .out/bin/nextalign-Linux-x86_64
          destination: nextalign-Linux-x86_64

      - store_artifacts:
          name: 'Store artifacts: nextclade-Linux-x86_64'
          path: .out/bin/nextclade-Linux-x86_64
          destination: nextclade-Linux-x86_64

      - run:
          name: 'Publish binaries to GitHub Releases: Linux-x86_64'
          command: |
            OS=linux ./scripts/download_github_release_tool.sh
            ./scripts/publish_github_releases.sh

      - run:
          name: 'Publish Docker images to DockerHub'
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            ./scripts/publish_docker_images.sh

  Build-MacOS:
    parameters:
      macos_arch:
        type: string

    macos:
      xcode: "12.4.0"

    environment:
      CLICOLOR: 1
      TERM: xterm-256color

    steps:
      - checkout

      - restore_cache:
          name: 'Restore homebrew cache'
          keys:
            - cache-nextclade-v1-homebrew-{{ arch }}

      - run:
          name: 'Install build tools'
          command: |
            set -x
            brew install -q ccache cmake conan coreutils cppcheck ghr
            conan profile new default --detect
            conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
          environment:
            HOMEBREW_NO_AUTO_UPDATE: 1
            CONAN_USER_HOME: '/Users/distiller/project/.cache'

      - save_cache:
          name: 'Save homebrew cache'
          key: cache-nextclade-v1-homebrew-{{ arch }}
          paths:
            - '~/Library/Caches/Homebrew'
            - '/usr/local/Homebrew'

      - restore_cache:
          name: 'Restore build cache'
          keys:
            - cache-nextclade-v1-cache-{{ arch }}-{{ checksum "conanfile.txt" }}-<< parameters.macos_arch >>

      - run:
          name: Run macOS << parameters.macos_arch >> build
          command: |
            make prod
          environment:
            CONAN_USER_HOME: '/Users/distiller/project/.cache'
            HOST_ARCH: << parameters.macos_arch >>

      - save_cache:
          name: 'Save build cache'
          key: cache-nextclade-v1-cache-{{ arch }}-{{ checksum "conanfile.txt" }}-<< parameters.macos_arch >>
          paths:
            - .cache

      - store_artifacts:
          name: 'Store artifacts: nextalign-MacOS-<< parameters.macos_arch >>'
          path: .out/bin/nextalign-MacOS-<< parameters.macos_arch >>
          destination: nextalign-MacOS-<< parameters.macos_arch >>

      - store_artifacts:
          name: 'Store artifacts: nextclade-MacOS-<< parameters.macos_arch >>'
          path: .out/bin/nextclade-MacOS-<< parameters.macos_arch >>
          destination: nextclade-MacOS-<< parameters.macos_arch >>

      - run:
          name: 'Publish binaries to GitHub Releases: MacOS-<< parameters.macos_arch >>'
          command: |
            OS=darwin ./scripts/download_github_release_tool.sh
            ./scripts/publish_github_releases.sh

workflows:
  version: 2
  build:
    jobs:
      - Update-Builder-container:
          <<: *major_branches_only

      - Build-Web:
          context: nextclade_web_<< pipeline.git.branch >>
          <<: *major_branches_only
          requires:
            - Update-Builder-container

      - Build-Linux-x86_64:
          <<: *release_only
          requires:
            - Update-Builder-container

      - Build-MacOS:
          matrix:
            parameters:
              macos_arch:
                - x86_64
                - arm64
          <<: *release_only
