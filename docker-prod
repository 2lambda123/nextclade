#!/usr/bin/env bash
#
# Builds and optionally pushes production docker images
#
set -euo pipefail

DOCKER_IMAGE_PUSH=0

case "${1:-}" in
"--push" | "-p")
  shift
  DOCKER_IMAGE_PUSH=1
  ;;
esac

DOCKER_ORG="nextstrain"

declare -a PROJECT_NAMES=(
  "nextclade"
  "nextalign"
)

declare -a BASE_IMAGES=(
  "alpine"
  "scratch"
  "debian"
)

VERSION=$(dasel select -p toml -s ".package.version" -f "packages_rs/nextclade-cli/Cargo.toml")
VERSION_MAJOR=$(cut -d '.' -f 1 <<<"${VERSION}")

for BASE_IMAGE in "${BASE_IMAGES[@]}"; do
  for PROJECT_NAME in "${PROJECT_NAMES[@]}"; do
    echo "Building docker image '${DOCKER_ORG}/${PROJECT_NAME}:${VERSION}-${BASE_IMAGE}'"

    export DOCKER_BUILDKIT=1
    export BUILDKIT_PROGRESS=plain
    export PROGRESS_NO_TRUNC=1

    TAGS=" \
      ${DOCKER_ORG}/${PROJECT_NAME}:${VERSION_MAJOR}-${BASE_IMAGE} \
      ${DOCKER_ORG}/${PROJECT_NAME}:${VERSION}-${BASE_IMAGE} \
      ${DOCKER_ORG}/${PROJECT_NAME}:latest-${BASE_IMAGE} \
      ${DOCKER_ORG}/${PROJECT_NAME}:${BASE_IMAGE}
      "

    if [ "${BASE_IMAGE}" == "debian" ]; then
      TAGS="${TAGS:-} \
        ${DOCKER_ORG}/${PROJECT_NAME}:latest \
        ${DOCKER_ORG}/${PROJECT_NAME}:${VERSION} \
        ${DOCKER_ORG}/${PROJECT_NAME}:${VERSION_MAJOR} \
        "
    fi

    # Make a string containing of tags for `docker build` command
    TAGS_FOR_DOCKER_BUILD=""
    for tag in ${TAGS}; do
      TAGS_FOR_DOCKER_BUILD="${TAGS_FOR_DOCKER_BUILD} -t ${tag}"
    done

    # shellcheck disable=SC2086
    docker build -q \
      --file="docker/docker-prod-${BASE_IMAGE}.dockerfile" \
      ${TAGS_FOR_DOCKER_BUILD} \
      . \
      >/dev/null

    echo ""

    if [ "${DOCKER_IMAGE_PUSH}" == "1" ]; then
      # Push each tag separately (`docker push` does not support pushing multiple)
      for tag in ${TAGS}; do
        echo "Pushing  docker image '${tag}'"
        docker push "${tag}"
      done
      echo ""
    fi

  done
done
